% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scales.R
\name{scale_colour_e61}
\alias{scale_colour_e61}
\alias{scale_fill_e61}
\title{Set e61 colour palettes in scale_*_manual/gradient}
\usage{
scale_colour_e61(
  n = 0,
  reverse = FALSE,
  discrete = TRUE,
  palette = c("light", "dark", "diverging", "grey"),
  ...
)

scale_fill_e61(
  n = 0,
  reverse = FALSE,
  discrete = TRUE,
  palette = c("light", "dark", "diverging", "grey"),
  ...
)
}
\arguments{
\item{n}{Numeric. The number of colours in your colour scale, required for
discrete scales.}

\item{reverse}{Logical. TRUE reverses the colour order. Defaults to FALSE.}

\item{discrete}{Logical. Indicate whether to use a discrete scale. Defaults
to TRUE.}

\item{palette}{Character. The specific e61 palette for continuous scales.
Must be supplied if a continuous scale is used.}

\item{...}{
  Arguments passed on to \code{\link[ggplot2:scale_manual]{ggplot2::scale_colour_manual}}
  \describe{
    \item{\code{values}}{a set of aesthetic values to map data values to. The values
will be matched in order (usually alphabetical) with the limits of the
scale, or with \code{breaks} if provided. If this is a named vector, then the
values will be matched based on the names instead. Data values that don't
match will be given \code{na.value}.}
    \item{\code{aesthetics}}{Character string or vector of character strings listing the
name(s) of the aesthetic(s) that this scale works with. This can be useful, for
example, to apply colour settings to the \code{colour} and \code{fill} aesthetics at the
same time, via \code{aesthetics = c("colour", "fill")}.}
    \item{\code{breaks}}{One of:
\itemize{
\item \code{NULL} for no breaks
\item \code{waiver()} for the default breaks (the scale limits)
\item A character vector of breaks
\item A function that takes the limits as input and returns breaks
as output
}}
    \item{\code{na.value}}{The aesthetic value to use for missing (\code{NA}) values}
  }}
}
\value{
ggplot2 object
}
\description{
Set e61 colour palettes in scale_*_manual/gradient
}
\examples{

library(ggplot2)

ggplot(data = mtcars, aes(x = wt, y = mpg, col = factor(cyl))) +
   geom_point() +
   e61_colour_manual(n = 3) +
   theme_e61()
}
